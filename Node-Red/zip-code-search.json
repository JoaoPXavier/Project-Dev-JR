[
  {
    "id": "zip_tab",
    "type": "tab",
    "label": "Zip Code Searcher",
    "disabled": false,
    "info": ""
  },
  {
    "id": "http_in_form",
    "type": "http in",
    "z": "zip_tab",
    "name": "Serve Form Page",
    "url": "/zip_form",
    "method": "get",
    "upload": false,
    "x": 140,
    "y": 80,
    "wires": [
      [
        "html_template"
      ]
    ]
  },
  {
    "id": "html_template",
    "type": "template",
    "z": "zip_tab",
    "name": "Form HTML",
    "field": "payload",
    "fieldType": "msg",
    "format": "html",
    "syntax": "mustache",
    "template": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Busca de CEP</title>\n  <style>\n    body { font-family: Arial, sans-serif; background: #f0f2f5; margin: 0; padding: 0; }\n    .container { max-width: 800px; margin: 40px auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n    h1 { text-align: center; color: #004466; }\n    input, button { padding: 10px; width: 100%; margin: 10px 0; font-size: 16px; border-radius: 5px; border: 1px solid #ccc; }\n    button { background-color: #0077cc; color: white; border: none; cursor: pointer; }\n    button:hover { background-color: #005fa3; }\n    .result, .history { margin-top: 20px; }\n    table { width: 100%; border-collapse: collapse; margin-top: 10px; }\n    th, td { padding: 12px; text-align: left; border-bottom: 1px solid #ccc; }\n    th { background-color: #0077cc; color: white; }\n    tr:hover { background-color: #f1f1f1; }\n    footer { text-align: center; font-size: 14px; color: #888; margin-top: 40px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Vamos encontrar a corretora mais próxima de você</h1>\n    <input id=\"cep\" placeholder=\"Digite o CEP (ex: 30110-008)\" />\n    <button onclick=\"buscar()\">Buscar</button>\n    <button onclick=\"limpar()\" style=\"background-color: #cc0000;\">Limpar Histórico</button>\n    <div id=\"resultadoCep\"></div>\n    <div class=\"result\" id=\"resultado\"></div>\n    <footer>Desenvolvido por João Pereira</footer>\n  </div>\n  <script>\n    let historico = [];\n    function buscar() {\n      const input = document.getElementById('cep');\n      let cep = input.value.replace(/\\D/g, '');\n      if (cep.length !== 8) return alert('Digite um CEP válido com 8 dígitos.');\n      cep = cep.replace(/(\\d{5})(\\d{3})/, '$1-$2');\n      fetch(`/zip_searcher/${cep}`).then(res => res.json()).then(data => {\n        historico.unshift(data);\n        document.getElementById('resultadoCep').innerHTML = `<h3>CEP Consultado: ${data.cep.cep}</h3>`;\n        renderHistorico();\n        input.value = '';\n      }).catch(() => alert('Erro ao buscar o CEP.'));\n    }\n    function renderHistorico() {\n      const r = document.getElementById('resultado');\n      if (!historico.length) return r.innerHTML = '';\n      r.innerHTML = historico.map(data => {\n        const c = data.cep;\n        const b = data.brokers;\n        return `<div style='margin-top:30px;'>\n          <p><strong>Rua:</strong> ${c.street}</p>\n          <p><strong>Bairro:</strong> ${c.neighborhood}</p>\n          <p><strong>Cidade:</strong> ${c.city}</p>\n          <p><strong>Estado:</strong> ${c.state}</p>\n          ${b.length ? `\n            <table>\n              <thead><tr><th>Corretora</th><th>Cidade</th><th>CNPJ</th></tr></thead>\n              <tbody>${b.map(c => `<tr><td>${c.nome_social}</td><td>${c.municipio}</td><td>${c.cnpj}</td></tr>`).join('')}</tbody>\n            </table>` : '<p><em>Nenhuma corretora encontrada para esse CEP.</em></p>'}\n        </div>`;\n      }).join('');\n    }\n    function limpar() {\n      historico = [];\n      document.getElementById('resultado').innerHTML = '';\n      document.getElementById('resultadoCep').innerHTML = '';\n    }\n  </script>\n</body>\n</html>",
    "x": 340,
    "y": 80,
    "wires": [
      [
        "http_response_form"
      ]
    ]
  },
  {
    "id": "http_response_form",
    "type": "http response",
    "z": "zip_tab",
    "name": "Return Form Page",
    "statusCode": "",
    "headers": {
      "Content-Type": "text/html"
    },
    "x": 580,
    "y": 80,
    "wires": []
  },
  {
    "id": "http_in_zip",
    "type": "http in",
    "z": "zip_tab",
    "name": "Zip Search",
    "url": "/zip_searcher/:zip",
    "method": "get",
    "upload": false,
    "x": 140,
    "y": 160,
    "wires": [
      [
        "fn_build_url"
      ]
    ]
  },
  {
    "id": "fn_build_url",
    "type": "function",
    "z": "zip_tab",
    "name": "CEP → URL",
    "func": "const zip = msg.req.params.zip.replace(/\\D/g, '');\nmsg.url = `https://brasilapi.com.br/api/cep/v2/${zip}`;\nreturn msg;",
    "outputs": 1,
    "x": 340,
    "y": 160,
    "wires": [
      [
        "http_request_cep"
      ]
    ]
  },
  {
    "id": "http_request_cep",
    "type": "http request",
    "z": "zip_tab",
    "name": "Buscar CEP",
    "method": "GET",
    "ret": "obj",
    "url": "",
    "useDynamicUrl": true,
    "x": 540,
    "y": 160,
    "wires": [
      [
        "fn_find_brokers"
      ]
    ]
  },
  {
    "id": "fn_find_brokers",
    "type": "function",
    "z": "zip_tab",
    "name": "Busca cidade corretora",
    "func": "msg.cepData = msg.payload;\nmsg.brokerCity = msg.payload.city;\nmsg.url = \"https://brasilapi.com.br/api/cvm/corretoras/v1\";\nreturn msg;",
    "outputs": 1,
    "x": 740,
    "y": 160,
    "wires": [
      [
        "http_request_broker"
      ]
    ]
  },
  {
    "id": "http_request_broker",
    "type": "http request",
    "z": "zip_tab",
    "name": "Buscar corretoras",
    "method": "GET",
    "ret": "obj",
    "url": "",
    "useDynamicUrl": true,
    "x": 960,
    "y": 160,
    "wires": [
      [
        "fn_merge"
      ]
    ]
  },
  {
    "id": "fn_merge",
    "type": "function",
    "z": "zip_tab",
    "name": "Merge CEP + corretoras + MQTT",
    "func": "const cep = msg.cepData;\nconst brokers = msg.payload.filter(b => b.municipio?.toLowerCase() === cep.city.toLowerCase());\n\n// MQTT\nconst msgCep = { topic: 'busca/cep', payload: cep.cep };\nconst msgBrokers = { topic: 'busca/corretora', payload: brokers };\n\nmsg.payload = { cep, brokers };\nreturn [msg, msgCep, msgBrokers];",
    "outputs": 3,
    "x": 1180,
    "y": 160,
    "wires": [
      [
        "http_response_zip"
      ],
      [
        "mqtt_out_cep"
      ],
      [
        "mqtt_out_corretora"
      ]
    ]
  },
  {
    "id": "http_response_zip",
    "type": "http response",
    "z": "zip_tab",
    "name": "Return JSON",
    "statusCode": "",
    "headers": {},
    "x": 1360,
    "y": 160,
    "wires": []
  },
  {
    "id": "mqtt_out_cep",
    "type": "mqtt out",
    "z": "zip_tab",
    "name": "Publicar CEP buscado (mqtt out)",
    "topic": "busca/cep",
    "qos": "0",
    "retain": "",
    "broker": "mqtt_broker",
    "x": 1400,
    "y": 120,
    "wires": []
  },
  {
    "id": "mqtt_out_corretora",
    "type": "mqtt out",
    "z": "zip_tab",
    "name": "Publicar corretoras (mqtt out)",
    "topic": "busca/corretora",
    "qos": "0",
    "retain": "",
    "broker": "mqtt_broker",
    "x": 1420,
    "y": 200,
    "wires": []
  }
]